environment:
  global:
    RUST_VERSION: beta
    CRATE_NAME: twitchdl
  matrix:
    # MinGW
    - TARGET: i686-pc-windows-gnu
    - TARGET: x86_64-pc-windows-gnu
    # MSVC
    - TARGET: i686-pc-windows-msvc
    - TARGET: x86_64-pc-windows-msvc

install:
  - ps: >-
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw32\bin'
      }
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -Vv
  - cargo -V

test_script:
  - cargo build --verbose --target %TARGET%

before_deploy:
  - cargo build --release --target %TARGET%
  - ps: >-
      $SRC_DIR = $PWD.Path
      ls $SRC_DIR
      Set-Location $ENV:Temp
      New-Item -Type Directory -Name $STAGE
      Set-Location $STAGE
      $ZIP = "$SRC_DIR\$($Env:CRATE_NAME)-$($Env:TARGET).zip"
      Copy-Item "$SRC_DIR\target\$($Env:TARGET)\release\$($Env:CRATE_NAME).exe" '.\'
      7z a "$ZIP" *
      Push-AppveyorArtifact "$ZIP"
      Remove-Item *.* -Force
      Set-Location ..
      Remove-Item $STAGE
      Set-Location $SRC_DIR

cache:
  - C:\Users\appveyor\.cargo\registry
  - target

branches:
  only:
    - master

notifications:
  - provider: Email
    on_build_success: false

build: false